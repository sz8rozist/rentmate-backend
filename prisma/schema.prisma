generator nestgraphql {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  name       String
  role       UserRole
  flatId     Int?
  password   String
  ownedFlats Flat[]    @relation("LandlordFlats")
  messages   Message[] @relation("SenderUser")
  flat       Flat?     @relation("TenantFlat", fields: [flatId], references: [id])

  @@index([flatId], map: "User_flatId_fkey")
}

model Flat {
  id         Int         @id @default(autoincrement())
  address    String
  price      Int
  status     FlatStatus
  landlordId Int
  landlord   User        @relation("LandlordFlats", fields: [landlordId], references: [id])
  images     FlatImage[] @relation("FlatImages")
  messages   Message[]   @relation("MessageFlat")
  tenants    User[]      @relation("TenantFlat")

  @@index([landlordId], map: "Flat_landlordId_fkey")
}

model FlatImage {
  id     Int    @id @default(autoincrement())
  url    String
  flatId Int
  flat   Flat   @relation("FlatImages", fields: [flatId], references: [id])

  @@index([flatId], map: "FlatImage_flatId_fkey")
}

model Message {
  id        Int      @id @default(autoincrement())
  flatId    Int
  senderId  Int
  content   String
  createdAt DateTime @default(now())
  imageUrls String?
  flat      Flat     @relation("MessageFlat", fields: [flatId], references: [id])
  sender    User     @relation("SenderUser", fields: [senderId], references: [id])

  @@index([flatId], map: "Message_flatId_fkey")
  @@index([senderId], map: "Message_senderId_fkey")
}

enum UserRole {
  landlord
  tenant
}

enum FlatStatus {
  available
  rented
}
